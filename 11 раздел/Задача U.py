# 		Cоздайте массив [True] * ($K$ + 1). Заполните его значениями так, чтобы IsPrime[i] == True, если i — простое число и IsPrime[i] == False, если i — составное.
# Для этого сначала заполняем массив True. Затем “вычеркиваем” (то есть помечаем нулями) те элементы, которые делятся на 2, начиная с 4. Затем вычеркиваем те элементы, которые делятся на 3, начиная с 9. Затем вычеркиваем элементы, которые делятся на 5, начиная с 25... И так далее —находим следующее невычеркнутое число $p$ и вычеркиваем все кратные $p$ начиная с $p^2$.
# В результате невычернутыми останутся только простые числа. Такая процедура называется “Решето Эратосфена”.
# Напишите программу, которая строит решето Эратосфена, потом считывает натуральное число $N$ и выводит $N$-е по счету простое число. Гарантируется, что это число не превосходит $N \le 100000$.
# Обратите внимание на то, что 100000-е простое число не является числом 100000.




import math

def p():
    N = 100000
    s = set(range(1, N, 2))
    for i in range(2, int(N** .5)):
        if i in s:
            s -= set(range(i*i, N, i))
    return s

er = list(p())
er.insert(1, 2)

n = int(input())

print(er[n])